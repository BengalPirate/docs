<p>
    Appwrite Functions executions can be invoked in several ways.
    Functions can be invoked through the Appwrite SDK and visting its REST endpoint. Functions can also be triggered by events and scheduled executions.
    Here are all the different ways to consume your new Appwrite Functions.
</p>

<h2><a href="#domain" id="domain">Domain</a></h2>
<p>
    Each Appwrite function has its own domain. (can be custom)
    When requests are made to this link, whether through a browser or through an HTTP requests, 
    the request information like request headers and request body will be passed to the function.
    This unlocks interesting ways to integrate other apps and backends to your Appwrite project.

    [TODO: @luke can we do a curl example here?]
</p>


[TODO: @matej @luke when the SDKs are generated, what other optional params exist for this function? Can we show them in example, too?]
[for example body (data)]
<h2><a href="#sdk" id="sdk">SDK</a></h2>
<p>
   You can invoke your Appwrite Functions directly from the Appwrite SDKs.
</p>

<a href="/docs/sdk/functions"><i class="icon-angle-circled-right"></i>Learn more about using the Appwrite SDKs</a>

<h3>Client SDKs</h3>
[TODO: @matej @luke client SDK examples here are needed, too.]
<h3>Server SDKs</h3>
<ul class="phases clear" data-ui-phases>
    <li>
        <h3>Node.js</h3>
        <div>
        <div class="ide margin-top-small" data-lang="javascript" data-lang-label="JavaScript">
            <pre class="line-numbers"><code class="prism language-js" data-prism>const sdk = require('node-appwrite');

const client = new sdk.Client();

const functions = new sdk.Functions(client);

client
    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint
    .setProject('5df5acd0d48c2') // Your project ID
    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
;

const promise = functions.createExecution('[FUNCTION_ID]');

promise.then(function (response) {
    console.log(response);
}, function (error) {
    console.log(error);
});</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>PHP</h3>
        <div>
        <div class="ide margin-top-small" data-lang="php" data-lang-label="PHP">
            <pre class="line-numbers"><code class="prism language-php" data-prism>&lt;?php

use Appwrite\Client;
use Appwrite\Services\Functions;

$client = new Client();

$client
    ->setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint
    ->setProject('5df5acd0d48c2') // Your project ID
    ->setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
;

$functions = new Functions($client);

$result = $functions->createExecution('[FUNCTION_ID]');</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>Python</h3>
        <div>
        <div class="ide margin-top-small" data-lang="python" data-lang-label="Python">
            <pre class="line-numbers"><code class="prism language-python" data-prism>from appwrite.client import Client
from appwrite.services.functions import Functions

client = Client()

(client
  .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint
  .set_project('5df5acd0d48c2') # Your project ID
  .set_key('919c2d18fb5d4...a2ae413da83346ad2') # Your secret API key
)

functions = Functions(client)

result = functions.create_execution('[FUNCTION_ID]')</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>Ruby</h3>
        <div>
        <div class="ide margin-top-small" data-lang="ruby" data-lang-label="Ruby">
            <pre class="line-numbers"><code class="prism language-ruby" data-prism>require 'Appwrite'

include Appwrite

client = Client.new
    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint
    .set_project('5df5acd0d48c2') # Your project ID
    .set_key('919c2d18fb5d4...a2ae413da83346ad2') # Your secret API key

functions = Functions.new(client)

response = functions.create_execution(function_id: '[FUNCTION_ID]')

puts response.inspect</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>Deno</h3>
        <div>
        <div class="ide margin-top-small" data-lang="typescript" data-lang-label="Deno">
            <pre class="line-numbers"><code class="prism language-typescript" data-prism>import * as sdk from "https://deno.land/x/appwrite/mod.ts";

// Init SDK
let client = new sdk.Client();

let functions = new sdk.Functions(client);

client
    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint
    .setProject('5df5acd0d48c2') // Your project ID
    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
;


let promise = functions.createExecution('[FUNCTION_ID]');

promise.then(function (response) {
    console.log(response);
}, function (error) {
    console.log(error);
});</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>Dart</h3>
        <div>
        <div class="ide margin-top-small" data-lang="dart" data-lang-label="Dart">
            <pre class="line-numbers"><code class="prism language-dart" data-prism>import 'package:dart_appwrite/dart_appwrite.dart';

void main() { // Init SDK
  Client client = Client();
  Functions functions = Functions(client);

  client
    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint
    .setProject('5df5acd0d48c2') // Your project ID
    .setKey('919c2d18fb5d4...a2ae413da83346ad2') // Your secret API key
  ;

  Future result = functions.createExecution(
    functionId: '[FUNCTION_ID]',
  );

  result
    .then((response) {
      print(response);
    }).catchError((error) {
      print(error.response);
  });
}</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>Swift</h3>
        <div>
        <div class="ide margin-top-small" data-lang="swift" data-lang-label="Swift">
            <pre class="line-numbers"><code class="prism language-swift" data-prism>import Appwrite

let client = Client()
    .setEndpoint("https://cloud.appwrite.io/v1") // Your API Endpoint
    .setProject("5df5acd0d48c2") // Your project ID
    .setKey("919c2d18fb5d4...a2ae413da83346ad2") // Your secret API key

let functions = Functions(client)

let execution = try await functions.createExecution(
    functionId: "[FUNCTION_ID]"
)</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>.NET</h3>
        <div>
        <div class="ide margin-top-small" data-lang="csharp" data-lang-label="C#">
            <pre class="line-numbers"><code class="prism language-csharp" data-prism>using Appwrite;
using Appwrite.Services;
using Appwrite.Models;

var client = new Client()
    .SetEndPoint("https://cloud.appwrite.io/v1") // Your API Endpoint
    .SetProject("5df5acd0d48c2") // Your project ID
    .SetKey("919c2d18fb5d4...a2ae413da83346ad2"); // Your secret API key

var functions = new Functions(client);

Execution result = await functions.CreateExecution(
    functionId: "[FUNCTION_ID]");</code></pre>
        </div>
        </div>
    </li>
    <li>
        <h3>Kotlin</h3>
        <div>
        <div class="ide margin-top-small" data-lang="kotlin" data-lang-label="Kotlin">
            <pre class="line-numbers"><code class="prism language-kotlin" data-prism>import io.appwrite.Client
import io.appwrite.services.Functions

val client = Client(context)
    .setEndpoint("https://cloud.appwrite.io/v1") // Your API Endpoint
    .setProject("5df5acd0d48c2") // Your project ID
    .setKey("919c2d18fb5d4...a2ae413da83346ad2") // Your secret API key

val functions = Functions(client)

val response = functions.createExecution(
    functionId = "[FUNCTION_ID]",
)</code></pre>
        </div>

        </div>
    </li>
    <li>
        <h3>Java</h3>
        <div>
        <div class="ide margin-top-small" data-lang="java" data-lang-label="Java">
            <pre class="line-numbers"><code class="prism language-java" data-prism>import io.appwrite.Client;
import io.appwrite.coroutines.CoroutineCallback;
import io.appwrite.services.Functions;

Client client = new Client()
    .setEndpoint("https://cloud.appwrite.io/v1") // Your API Endpoint
    .setProject("5df5acd0d48c2") // Your project ID
    .setKey("919c2d18fb5d4...a2ae413da83346ad2"); // Your secret API key

Functions functions = new Functions(client);

functions.createExecution(
    "[FUNCTION_ID]",
    new CoroutineCallback<>((result, error) -> {
        if (error != null) {
            error.printStackTrace();
            return;
        }

        System.out.println(result);
    })
);</code></pre>
        </div>
        </div>
    </li>
</ul>



<h2><a href="#events" id="events">Events</a></h2>
<p>
    Changes in Appwrite emit events. 
    You can configure Functions to be executed in response to these events.
</p>
<ol class="margin-top margin-bottom-large text-size-normal">
    <li>In Appwrite Console, navigate to <b>Functions</b>.</li>
    <li>Click to open a function you wish to add variables to.</li>
	<li>Under the <b>Settings</b> tab, navigate to <b>Events</b>.</li>
    <li>Add one or multiple events as triggers for the function.</li>
    <li>
        Be careful to avoid selecting events that can be caused by the function itself. 
        This can cause the function to trigger it's own execution, resulting in infinite recursions.
    </li>
</ol>


<h2><a href="#schedule" id="schedule">Schedule</a></h2>
<p>Appwrite supports scheduled function executions. You can schedule executions using <a href="https://en.wikipedia.org/wiki/Cron" target="_blank" rel="noopener">cron expressions</a> in the settings of your function. Cron supports recurring executions as frequently as <b>every minute</b>.</p>

<p>Here are some cron expressions for common intervals.</p>

<table class="full text-size-small">
    <thead>
    <tr>
        <td>Cron Expression</td>
        <td>Schedule</td>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>*/15 * * * *</td>
        <td>Every 15 minutes</td>
    </tr>
    <tr>
        <td>0 * * * *</td>
        <td>Every Hour</td>
    </tr>
    <tr>
        <td>0 0 * * *</td>
        <td>Every day at 00:00</td>
    </tr>
    <tr>
        <td>0 0 * * 1</td>
        <td>Every monday at 00:00</td>
    </tr>
    </tbody>
</table>

<h2>Permissions</h2>
<p>
    Appwrite Functions can be executed using Client or Server SDKs. 
    Client SDKs must be authenticated with an account that has been granted execution <a href="/docs/permissions">permissions</a> on the function's settings page. 
    Server SDKs require an API key with the correct scopes.
</p>
<p>
    If your function with a generated or custom domain, permissions are disabled for this function.
    Anyone visiting this domain will be able to execute the function.
    If you need to enforce permissions for functions with a domain, use authentication methods like JWT.
</p>

<h2>Logs and results</h2>
<p>
    You can view the logs your function executions in the Appwrite Console. 
    Navigate to <b>Functions</b> and click on a function to view it's executions.
</p>
<p>
    For security reasons, Appwrite does not store the response of function executions.
    If you need to debug, we recommend logging the response in your function code.
</p>
